---
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro";
import Layout from "@layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

// Filter blog entries with 'draft: false' & date before current date
const publishedBlogEntries = await getCollection("blogs", ({ data }) => {
  return !data.draft && data.publishDate < new Date();
});

// Sort content entries by publication date
publishedBlogEntries.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});
---

<Layout title="Blog">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Blog</Fragment>
      <Fragment slot="desc"></Fragment>
    </Sectionhead>
    <main class="mt-16">
      <ul class="grid gap-16 max-w-4xl mx-auto">
        {
          publishedBlogEntries.length === 0 && (
            <li>
              <p class="text-center">No blog posts found.</p>
            </li>
          )
        }
        {
          publishedBlogEntries.length > 0 &&
            publishedBlogEntries.map((blogPostEntry, index) => (
              <li>
                <a href={`/blogs/${blogPostEntry.slug}`}>
                  <div class="grid md:grid-cols-2 gap-5 md:gap-10 items-center">
                    <Image
                      src={blogPostEntry.data.image.src}
                      alt={blogPostEntry.data.image.alt}
                      height={blogPostEntry.data.image.height}
                      width={blogPostEntry.data.image.width}
                      fetchpriority={"high"}
                      loading={index <= 2 ? "eager" : "lazy"}
                      decoding={index <= 2 ? "sync" : "async"}
                      transition:name={`blog-${blogPostEntry.data.title}-image`}
                      class="w-full rounded-md"
                    />
                    <div>
                      <span
                        class="text-blue-400 uppercase tracking-wider text-sm font-medium"
                        transition:name={`blog-${blogPostEntry.data.category}-category`}>
                        {blogPostEntry.data.category}
                      </span>

                      <h2
                        class="text-3xl font-semibold leading-snug tracking-tight mt-1"
                        transition:name={`blog-${blogPostEntry.data.title}`}>
                        {blogPostEntry.data.title}
                      </h2>

                      <div
                        class="flex gap-2 mt-3"
                        transition:name={`blog-${blogPostEntry.data.title}-author`}>
                        <span class="text-gray-400">{blogPostEntry.data.author}</span>
                        <span class="text-gray-400">â€¢ </span>
                        <time
                          class="text-gray-400"
                          transition:name={`blog-${blogPostEntry.data.title}-date`}
                          datetime={blogPostEntry.data.publishDate.toISOString()}>
                          {blogPostEntry.data.publishDate.toDateString()}
                        </time>
                      </div>
                    </div>
                  </div>
                </a>
              </li>
            ))
        }
      </ul>
    </main>
  </Container>
</Layout>
